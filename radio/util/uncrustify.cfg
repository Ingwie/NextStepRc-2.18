#
# K&R (sort-of)
#

indent_with_tabs                = 0             # 1=indent to level only, 2=indent with tabs
input_tab_size                  = 8             # original tab size
output_tab_size                 = 2             # new tab size
indent_columns                  = output_tab_size
indent_label                    = 2             # pos: absolute col, neg: relative column

nl_enum_brace                   = remove        # "enum {" vs "enum \n {"
nl_union_brace                  = remove        # "union {" vs "union \n {"
nl_struct_brace                 = remove        # "struct {" vs "struct \n {"
nl_do_brace                     = remove        # "do {" vs "do \n {"
nl_if_brace                     = remove        # "if () {" vs "if () \n {"
nl_for_brace                    = remove        # "for () {" vs "for () \n {"
nl_else_brace                   = remove        # "else {" vs "else \n {"
nl_while_brace                  = remove        # "while () {" vs "while () \n {"
nl_switch_brace                 = remove        # "switch () {" vs "switch () \n {"
nl_fcall_brace                  = add           # "foo() {" vs "foo()\n{"
nl_fdef_brace                   = add           # "int foo() {" vs "int foo()\n{"
nl_brace_while                  = remove
nl_brace_else                   = add 
nl_squeeze_ifdef                = true

mod_case_brace                  = remove

sp_before_semi                  = remove
sp_paren_paren                  = remove        # space between (( and ))
sp_return_paren                 = force         # "return (1);" vs "return(1);"
sp_sizeof_paren                 = remove        # "sizeof (int)" vs "sizeof(int)"
sp_before_sparen                = force         # "if (" vs "if("
sp_after_sparen                 = force         # "if () {" vs "if (){"
sp_after_cast                   = remove        # "(int) a" vs "(int)a"
sp_inside_braces                = force         # "{ 1 }" vs "{1}"
sp_inside_braces_struct         = force         # "{ 1 }" vs "{1}"
sp_inside_braces_enum           = force         # "{ 1 }" vs "{1}"
sp_inside_paren                 = remove        # "( 1 )" vs "(1)"
sp_inside_fparen                = remove        # "( 1 )" vs "(1)" - functions
sp_inside_sparen                = remove        # "( 1 )" vs "(1)" - if/for/etc
sp_assign                       = force
sp_assign_default               = remove
sp_arith                        = force
sp_bool                         = force
sp_compare                      = force
sp_after_comma                  = force
sp_after_ptr_star               = force
sp_before_ptr_star              = force
sp_before_byref                 = force
sp_after_byref                  = force
sp_func_def_paren               = remove        # "int foo (){" vs "int foo(){"
sp_func_call_paren              = remove        # "foo (" vs "foo("
sp_func_proto_paren             = remove        # "int foo ();" vs "int foo();"
sp_func_class_paren             = remove
sp_inside_angle                 = remove
sp_before_angle                 = remove
sp_after_angle                  = force

indent_class                    = true
indent_access_spec_body         = true
indent_switch_case              = 2

eat_blanks_before_close_brace   = true
eat_blanks_after_open_brace     = true

pp_indent                       = remove
pp_indent_at_level              = false
pp_indent_count                 = 2
# pp_indent_if                  = 2
# pp_if_indent_code             = false
# pp_define_at_level            = true

set FOR foreach

